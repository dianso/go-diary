name: Go Cross-Platform Build & Release

on:
  push:
    tags: 
      - "v*"  # 通过 git tag 触发发布流程
  workflow_dispatch:  # 允许手动触发

env:
  PROJECT_NAME: go-diary
  GO_VERSION: '1.24'

jobs:
  build:
    name: Build (${{ matrix.os }}-${{ matrix.arch }})
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - os: linux
            arch: amd64
            suffix: ""
          - os: linux
            arch: arm64
            suffix: ""
          - os: linux
            arch: arm
            arm_version: 6
            suffix: -v6
          - os: linux
            arch: arm
            arm_version: 7
            suffix: -v7
          - os: windows
            arch: amd64
            suffix: ""
          - os: windows
            arch: arm64
            suffix: ""
          - os: darwin
            arch: amd64
            suffix: ""
          - os: darwin
            arch: arm64
            suffix: ""

    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Build Binary
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          GOARM: ${{ matrix.arm_version || '' }}
          CGO_ENABLED: 0
        run: |
          OUTPUT="${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.suffix }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            OUTPUT="$OUTPUT.exe"
          fi
          go build -o $OUTPUT ./main.go

      - name: Create Archive
        run: |
          BINARY="${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.suffix }}"
          if [ "${{ matrix.os }}" = "windows" ]; then
            7z a "$BINARY.zip" "$BINARY.exe"
          else
            tar czvf "$BINARY.tar.gz" "$BINARY"
          fi

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.suffix }}
          path: |
            ${{ env.PROJECT_NAME }}-${{ matrix.os }}-${{ matrix.arch }}${{ matrix.suffix }}.*
          retention-days: 3

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write  # 需要写入 Releases 的权限

    steps:
      - name: Download All Artifacts
        uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Prepare Release Assets
        run: |
          mkdir release-assets
          find artifacts -type f \( -name "*.zip" -o -name "*.tar.gz" \) -exec cp {} release-assets \;

          # 生成校验文件
          cd release-assets
          shasum -a 256 * > SHA256SUMS

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          tag_name: ${{ github.ref_name }}
          name: "Release ${{ github.ref_name }}"
          body: |
            Multi-platform build for ${{ env.PROJECT_NAME }}
            - Build date: $(date -u +'%Y-%m-%dT%H:%M:%SZ')
            - Commit: [${{ github.sha }}](https://github.com/${{ github.repository }}/commit/${{ github.sha }})
          files: |
            release-assets/*
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}